import asyncio
import logging

from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.types import ErrorEvent, Message

from bot.tiktok import get_aweme_id, get_data, get_redirect_url
from bot.utils import handle_images, handle_music, handle_video

base_router = Router()
url_router = Router()


@base_router.message(CommandStart())
async def command_start_handler(message: Message):
    await message.reply("üëã")
    await message.bot.send_chat_action(message.chat.id, "typing")
    await asyncio.sleep(0.7)
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –±—É–¥—å-—è–∫–µ –≤—ñ–¥–µ–æ, "
        "–∫–∞—Ä—Ç–∏–Ω–∫–∏ —Ç–∞ –º—É–∑–∏–∫—É –±–µ–∑ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫—É. "
        "–ü—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤ –º–µ–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑ –¢—ñ–∫–¢–æ–∫—É, –∞ —è —Ç–æ–±—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
    )


@url_router.message(F.text)
async def url_handler(message: Message):
    url: str | None = await get_redirect_url(message.text)

    if not url:
        logging.warning(
            f"The following text don't seem to be TikTok link.\nTEXT: [{message.text}]"
        )
        return await message.reply("–¶–µ –Ω–µ —Å—Ö–æ–∂–µ –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¢—ñ–∫–¢–æ–∫...")

    aweme_id: int | None = get_aweme_id(url)
    if not aweme_id:
        logging.warning(f"Failed to get Aweme ID.\nURL: [{message.text}]")
        return await message.reply(
            "–ü—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –≤–∞—à–æ–≥–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!"
        )

    data = await get_data(aweme_id)

    if "images" not in data:
        video_url: str = data["hdplay"]
        await handle_video(message, video_url)
    else:
        images: list[str] = data["images"]
        await handle_images(message, images)

    music_url = data["music"]
    await handle_music(message, music_url)


@url_router.error()
async def error_handler(event: ErrorEvent):
    await event.update.message.reply("–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫...")
    raise event.exception
